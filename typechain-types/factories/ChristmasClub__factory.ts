/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ChristmasClub, ChristmasClubInterface } from "../ChristmasClub";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockStartTime",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    name: "increaseSavers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfSavers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountSaved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalGoalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060025560006003556000600455604051610964380380610964833981810160405281019061003491906100ff565b804210610076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006d906101af565b60405180910390fd5b8060008190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101cf565b600080fd5b6000819050919050565b6100dc816100c9565b81146100e757600080fd5b50565b6000815190506100f9816100d3565b92915050565b600060208284031215610115576101146100c4565b5b6000610123848285016100ea565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2073746172742074696d652073686f756c6420626520696e207460008201527f6865206675747572650000000000000000000000000000000000000000000000602082015250565b600061019960298361012c565b91506101a48261013d565b604082019050919050565b600060208201905081810360008301526101c88161018c565b9050919050565b610786806101de6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b6b55f2511610066578063b6b55f251461010e578063bf5d3ca41461012a578063c9aa476814610148578063ee0062d314610166578063fcdc022e1461018457610093565b80631436282c146100985780633ccfd60b146100b65780638da5cb5b146100c0578063a3c51571146100de575b600080fd5b6100a06101a2565b6040516100ad9190610474565b60405180910390f35b6100be6101a8565b005b6100c8610291565b6040516100d591906104d0565b60405180910390f35b6100f860048036038101906100f3919061051c565b6102b7565b6040516101059190610474565b60405180910390f35b6101286004803603810190610123919061051c565b6102dc565b005b610132610443565b60405161013f9190610474565b60405180910390f35b610150610449565b60405161015d9190610474565b60405180910390f35b61016e61044f565b60405161017b9190610474565b60405180910390f35b61018c610455565b6040516101999190610474565b60405180910390f35b60045481565b6000544210156101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e4906105a6565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93474260405161021e9291906105c6565b60405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561028e573d6000803e3d6000fd5b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260008282546102cb919061061e565b925050819055506002549050919050565b600054421115610321576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610318906106c4565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a890610730565b60405180910390fd5b7fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c5547426040516103e29291906105c6565b60405180910390a180600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610439919061061e565b9250508190555050565b60035481565b60005481565b60025481565b60015481565b6000819050919050565b61046e8161045b565b82525050565b60006020820190506104896000830184610465565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104ba8261048f565b9050919050565b6104ca816104af565b82525050565b60006020820190506104e560008301846104c1565b92915050565b600080fd5b6104f98161045b565b811461050457600080fd5b50565b600081359050610516816104f0565b92915050565b600060208284031215610532576105316104eb565b5b600061054084828501610507565b91505092915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b6000610590601683610549565b915061059b8261055a565b602082019050919050565b600060208201905081810360008301526105bf81610583565b9050919050565b60006040820190506105db6000830185610465565b6105e86020830184610465565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106298261045b565b91506106348361045b565b925082820190508082111561064c5761064b6105ef565b5b92915050565b7f546f6f206c61746520746f206d616b6520616e6f74686572206465706f73697460008201527f202d20796f752063616e207769746864726177206e6f77000000000000000000602082015250565b60006106ae603783610549565b91506106b982610652565b604082019050919050565b600060208201905081810360008301526106dd816106a1565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b600061071a601483610549565b9150610725826106e4565b602082019050919050565b600060208201905081810360008301526107498161070d565b905091905056fea2646970667358221220e5205db203afb12ae9cb75e2a9f88586a2d7d296349ebbf297e1a238ec6cddbf64736f6c63430008110033";

type ChristmasClubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChristmasClubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChristmasClub__factory extends ContractFactory {
  constructor(...args: ChristmasClubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _unlockStartTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ChristmasClub> {
    return super.deploy(
      _unlockStartTime,
      overrides || {}
    ) as Promise<ChristmasClub>;
  }
  override getDeployTransaction(
    _unlockStartTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_unlockStartTime, overrides || {});
  }
  override attach(address: string): ChristmasClub {
    return super.attach(address) as ChristmasClub;
  }
  override connect(signer: Signer): ChristmasClub__factory {
    return super.connect(signer) as ChristmasClub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChristmasClubInterface {
    return new utils.Interface(_abi) as ChristmasClubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChristmasClub {
    return new Contract(address, _abi, signerOrProvider) as ChristmasClub;
  }
}
